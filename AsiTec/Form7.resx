<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAITwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALx3wAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAG0WAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIimYwAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAHZQQKM2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFWJgAGwAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKOYwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP/EAAL/2gAMAwEAAgADAAAAEAQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQRLpaAQQQQQQQQ
        QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQHmW9AQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQRfC
        cUpwQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQRB9VzxUAQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ
        QQQQQQQQWvyjhmQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQw9kY2gQQQQQQQQQQQQQQQQQQQQ
        QQQQQQQQQQQQQQQQQQQUPOkhwQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQYwAgQQQQQQQQQQ
        QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ
        QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ
        QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ
        QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ
        QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ
        QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ
        QQQQQQQQQQQQQQQQQQQQQQd/AQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQX83AQQQQQQQQ
        QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQfKgwQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ
        YhuIwQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQWFqAWs2QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ
        QQQQQQQQQUDrgQT4wQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQaGYQQQQQQQQQQQQQQQQQQQQQQ
        QQQQQQQQQQQQQQQQQQQQQf/EADARAAIBAwEFBwMEAwAAAAAAAAIDAQAEEhEhIjJCUAUQMUFRYXETFIIj
        UnKBkNHx/9oACAECAQE/AOloQbj0ikqBKsYrWPPpaEG48RpNuCF6RXLrT7mU8c6+3SlhJEIx4lVsgEBp
        UazO2rm4FAbeLko2m1hEXj0gRIi0imoaksWDjNWxitwFNBv73LVxcAhWs/hTnG48i6T2JafVYTS4Qq7s
        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
        RcMJy+sKnXSvAtfguXKzs7c87d+lLPWf/9k=
</value>
  </data>
</root>